<Window
	x:Class="OneQuick.MainWindow" 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:local="clr-namespace:OneQuick"
    xmlns:c="clr-namespace:OneQuick.Converter" 
    xmlns:control="clr-namespace:OneQuick.Controls"
	Name="MainWin"
	Height="500"
	Width="966"
	DataContext="{Binding RelativeSource={RelativeSource Self}}"
	Title="{Binding TitleOnWindow}"
	PreviewKeyDown="MainWindow_PreviewKeyDown">
    <FrameworkElement.Resources>
        <ResourceDictionary>
            <c:DebugDataBindingConverter x:Key="DebugBinding" />
            <c:BoolToVisibilityConverter x:Key="BoolToVisibility" />
            <c:NullToVisibilityConverter x:Key="NullToVisibility" />
            <Style
				TargetType="{x:Type TextBlock}"
				x:Key="{x:Type TextBlock}">
                <Setter
					Property="TextWrapping"
					Value="WrapWithOverflow" />
            </Style>
            <Style
				TargetType="{x:Type GridViewColumnHeader}"
				x:Key="{x:Type GridViewColumnHeader}">
                <Setter
					Property="HorizontalContentAlignment"
					Value="Left" />
                <Setter
					Property="Margin"
					Value="5,0,0,0" />
            </Style>
            <Style
				TargetType="{x:Type FrameworkElement}"
				x:Key="NullIsNotEnabled">
                <Setter
					Property="IsEnabled"
					Value="True" />
                <Style.Triggers>
                    <DataTrigger
						Binding="{Binding}"
						Value="{x:Null}">
                        <Setter
							Property="IsEnabled"
							Value="False" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <Style
				TargetType="{x:Type TextBlock}"
				x:Key="tip">
                <Setter
					Property="Foreground"
					Value="#FF808080" />
            </Style>
        </ResourceDictionary>
    </FrameworkElement.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
				Height="20" />
            <RowDefinition
				Height="30" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <Grid
			Row="0">
            <Menu
				Margin="0">
                <MenuItem
					Header="Window">
                    <MenuItem
						IsCheckable="True"
						Header="WindowTopmost"
						IsChecked="{Binding Topmost}" />
                    <MenuItem
						Header="WindowHide"
						Click="CloseWindow" />
                    <Separator />
                    <MenuItem
						Header="Exit"
						Click="AskExit" />
                </MenuItem>
            </Menu>
        </Grid>
        <Grid
			Row="1">
            <DockPanel>
                <ToolBar
					ToolBarTray.IsLocked="True"
					Header="">
                    <Button
						FontWeight="Bold"
						Padding="2,2,7,2"
						Click="ToggleRunStop">
                        <FrameworkElement.Style>
                            <Style
								TargetType="{x:Type Button}">
                                <Setter
									Property="Foreground"
									Value="#FF008000" />
                                <Setter
									Property="Content"
									Value="Running" />
                                <Style.Triggers>
                                    <DataTrigger
										Value="False"
										Binding="{Binding IsEntryServerRunning, Mode=OneWay}">
                                        <Setter
											Property="Foreground"
											Value="#FFFF0000" />
                                        <Setter
											Property="Content"
											Value="Stopped" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </FrameworkElement.Style>
                    </Button>
                </ToolBar>
                <ToolBar
					Name="Items_ToolBar"
					ToolBarTray.IsLocked="True"
					IsEnabled="{Binding Items_ToolBar_Enable}">
                    <Button
						Content="Add"
						Click="ToolBar_NewItem" />
                    <Button
						Content="Remove"
						Click="ToolBar_DelItem" />
                </ToolBar>
                <ToolBar
					ToolBarTray.IsLocked="True"
					Visibility="{Binding Debug_Visibility}">
                    <Button
						Content="Exit"
						Click="Exit" />
                    <Button
						Content="Notepad"
						Click="Run_Notepad" />
                </ToolBar>
                <ToolBar
					ToolBarTray.IsLocked="True"
					Visibility="Visible"
					IsVisibleChanged="EntryServerStatus_ToolBar_IsVisibleChanged">
                    <Button
						Name="EntryServerShortStatus"
						Content="EntryServer_Status"
						Click="EntryServerShortStatus_Refresh" />
                </ToolBar>
                <ToolBar
					ToolBarTray.IsLocked="True"
					Visibility="{Binding Debug_Visibility}">
                    <Button
						Content="Obj, File: " />
                    <Button
						Content="{Binding ConfigObjectChanged}" />
                    <Button
						Content="{Binding ConfigFileChanged}" />
                </ToolBar>
            </DockPanel>
        </Grid>
        <Grid
			Row="2"
			ZIndex="9999"
			HorizontalAlignment="Left"
			VerticalAlignment="Bottom"
			Margin="30,0,0,40">
            <FrameworkElement.Resources>
                <ResourceDictionary>
                    <Style
						TargetType="{x:Type TextBlock}"
						x:Key="{x:Type TextBlock}">
                        <Setter
							Property="FontSize"
							Value="22" />
                        <Setter
							Property="Foreground"
							Value="#FFFF0000" />
                    </Style>
                </ResourceDictionary>
            </FrameworkElement.Resources>
        </Grid>
        <TabControl
			Name="MainTabControl"
			Margin="0"
			BorderBrush="#FFFFFFFF"
			Grid.Row="2"
			SelectionChanged="MainTabControl_SelectionChanged">
            <TabItem
				Name="ScreenBorder_TabItem"
				Header="screen_border">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition
							MaxHeight="1000" />
                        <RowDefinition
							Height="auto" />
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
							MaxWidth="1000"
							MinWidth="400" />
                        <ColumnDefinition
							MaxWidth="700"
							MinWidth="400" />
                        <ColumnDefinition
							Width="auto" />
                    </Grid.ColumnDefinitions>
                    <Grid
						Margin="10,10,0,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition
								Width="156" />
                            <ColumnDefinition
								Width="155*" />
                            <ColumnDefinition
								Width="156*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <FrameworkElement.Resources>
                            <ResourceDictionary>
                                <Style
									TargetType="{x:Type control:ScreenBorderButtonControl}"
									x:Key="{x:Type control:ScreenBorderButtonControl}">
                                    <Setter
										Property="BorderThickness"
										Value="1" />
                                    <Setter
										Property="Margin"
										Value="1" />
                                </Style>
                            </ResourceDictionary>
                        </FrameworkElement.Resources>
                        <control:ScreenBorderButtonControl
							Grid.Row="0"
							Grid.Column="0"
							IsChecked="{Binding SBC_LT}"
							ScreenBorder="{Binding Configur.ScreenBorders.LT}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="0"
							Grid.Column="1"
							IsChecked="{Binding SBC_T}"
							ScreenBorder="{Binding Configur.ScreenBorders.T}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="0"
							Grid.Column="2"
							IsChecked="{Binding SBC_RT}"
							ScreenBorder="{Binding Configur.ScreenBorders.RT}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="1"
							Grid.Column="0"
							IsChecked="{Binding SBC_L}"
							ScreenBorder="{Binding Configur.ScreenBorders.L}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="1"
							Grid.Column="2"
							IsChecked="{Binding SBC_R}"
							ScreenBorder="{Binding Configur.ScreenBorders.R}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="2"
							Grid.Column="0"
							IsChecked="{Binding SBC_LB}"
							ScreenBorder="{Binding Configur.ScreenBorders.LB}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="2"
							Grid.Column="1"
							IsChecked="{Binding SBC_B}"
							ScreenBorder="{Binding Configur.ScreenBorders.B}" />
                        <control:ScreenBorderButtonControl
							Grid.Row="2"
							Grid.Column="2"
							IsChecked="{Binding SBC_RB}"
							ScreenBorder="{Binding Configur.ScreenBorders.RB}" />
                        <Grid
							Row="1"
							Column="1"
							Margin="3">
                            <TextBlock
								HorizontalAlignment="Left"
								VerticalAlignment="Top">↖</TextBlock>
                            <TextBlock
								HorizontalAlignment="Center"
								VerticalAlignment="Top">↑</TextBlock>
                            <TextBlock
								HorizontalAlignment="Right"
								VerticalAlignment="Top">↗</TextBlock>
                            <TextBlock
								HorizontalAlignment="Left"
								VerticalAlignment="Center">←</TextBlock>
                            <TextBlock
								HorizontalAlignment="Right"
								VerticalAlignment="Center">→</TextBlock>
                            <TextBlock
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom">↙</TextBlock>
                            <TextBlock
								HorizontalAlignment="Center"
								VerticalAlignment="Bottom">↓</TextBlock>
                            <TextBlock
								HorizontalAlignment="Right"
								VerticalAlignment="Bottom">↘</TextBlock>
                        </Grid>
                    </Grid>
                    <Grid
						Column="1"
						RowSpan="2">
                        <control:ScreenBorderDetailControl
							x:Name="ScreenBorder_Detail"/>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem
				Name="QuickSearch_TabItem"
				Header="copy_search">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition
							Height="Auto"
							MaxHeight="100" />
                        <RowDefinition />
                        <RowDefinition
							Height="100" />
                    </Grid.RowDefinitions>
                    <Grid
						Row="0">
                        <ScrollViewer
							VerticalScrollBarVisibility="Hidden">
                            <TextBox
								IsReadOnly="True"
								Margin="3 5"
								FontSize="14"
								BorderThickness="0"
								Text="Tip_CopySearch" />
                        </ScrollViewer>
                    </Grid>
                    <control:ListViewX
						x:Name="QuickSearch_ListView"
						OnAddingItem="QuickSearch_ListView_OnAddingItem"
						OnRemovingItem="QuickSearch_ListView_OnRemovingItem"
						SelectionChanged="QuickSearch_ListView_SelectionChanged"
						Grid.Row="1"
						ItemsSource="{Binding Configur.QuickSearch}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn
									control:X.SortBy="Enable"
									Width="40"
									Header="Enable">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox IsChecked="{Binding Enable}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="Name"
									Width="130"
									Header="qs_name">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Name}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="LaunchKey"
									Width="120"
									Header="qs_key">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding LaunchKey}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="GroupKey"
									Width="120"
									Header="qs_groupkey">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding GroupKey}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="LaunchUrl"
									Width="400"
									Header="qs_url">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding LaunchUrl}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </control:ListViewX>
                    <StackPanel
						Name="QuickSearch_Item"
						Grid.Row="2"
						Style="{StaticResource NullIsNotEnabled}"
						DataContext="{x:Null}">
                        <StackPanel
							Orientation="Horizontal"
							Margin="10,20,10,0">
                            <TextBox
								MinWidth="150"
								Margin="0,0,10,0"
								Text="{Binding Name, UpdateSourceTrigger=PropertyChanged}" />
                            <control:KControl
								Width="200"
								Margin="0,0,10,0"
								Kwrapper="{Binding LaunchKey}" />
                            <control:KControl
								Width="200"
								Kwrapper="{Binding GroupKey}" />
                        </StackPanel>
                        <TextBox
							Margin="10,10,10,0"
							Text="{Binding LaunchUrl, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem
				Name="ReplacePhrase_TabItem"
				Header="phrase_replace">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition
							Height="*" />
                        <RowDefinition
							Height="76" />
                    </Grid.RowDefinitions>
                    <control:ListViewX
						x:Name="ReplacePhrase_ListView"
						OnAddingItem="ReplacePhrase_ListView_OnAddingItem"
						OnRemovingItem="ReplacePhrase_ListView_OnRemovingItem"
						SelectionChanged="ReplacePhrase_ListView_SelectionChanged"
						Grid.Row="0"
						ItemsSource="{Binding Configur.ReplacePhrases}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn
									Width="50"
									control:X.SortBy="Enable"
									Header="Enable">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox
												IsChecked="{Binding Enable}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									Width="200"
									control:X.SortBy="Input"
									Header="phrase_replace_input">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Input}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									Width="500"
									control:X.SortBy="Output"
									Header="phrase_replace_replace_to">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Output}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </control:ListViewX>
                    <Grid
						Name="ReplacePhrase_Item"
						Row="1"
						Style="{StaticResource NullIsNotEnabled}"
						DataContext="{x:Null}">
                        <TextBlock
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Margin="10,10,0,0"
							Text="phrase_replace_tip" />
                        <CheckBox
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Margin="10,45,0,0"
							IsChecked="{Binding Enable}" />
                        <TextBox
							Name="ReplacePhrase_Input_Edit_TextBox"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Width="204"
							Margin="39,41,0,0"
							FontSize="18"
							Text="{Binding Input, UpdateSourceTrigger=PropertyChanged}"
							GotKeyboardFocus="TextBox_GotKeyboardFocus"
							LostKeyboardFocus="TextBox_LostKeyboardFocus"
							PreviewKeyDown="ReplacePhrase_Input_Edit_TextBox_PreviewKeyDown" />
                        <TextBox
							Name="ReplacePhrase_Output_Edit_TextBox"
							VerticalAlignment="Top"
							Margin="256,41,10,0"
							FontSize="18"
							Text="{Binding Output, UpdateSourceTrigger=PropertyChanged}"
							GotKeyboardFocus="TextBox_GotKeyboardFocus"
							LostKeyboardFocus="TextBox_LostKeyboardFocus"
							PreviewKeyDown="ReplacePhrase_Output_Edit_TextBox_PreviewKeyDown" />
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem
				Name="HotkeyRemap_TabItem"
				Header="hotkey_remap">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition
							Width="2*" />
                        <ColumnDefinition
							Width="*" />
                    </Grid.ColumnDefinitions>
                    <control:ListViewX
						x:Name="CustomKeys_ListView"
						OnAddingItem="CustomKeys_ListView_OnAddingItem"
						OnRemovingItem="CustomKeys_ListView_OnRemovingItem"
						SelectionChanged="CustomKeys_ListView_SelectionChanged"
						ItemsSource="{Binding Configur.CustomKeys}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn
									control:X.SortBy="Enable"
									Width="40"
									Header="Enable">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox
												IsChecked="{Binding Enable}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="Hotkey"
									Width="300"
									Header="hotkey_remap_hotkey">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Hotkey}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="Operation"
									Width="500"
									Header="hotkey_remap_operation">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock>
												<FrameworkElement.Style>
													<Style
														TargetType="{x:Type TextBlock}">
														<Setter
															Property="Text"
															Value="{Binding Operation}" />
														<Style.Triggers>
															<DataTrigger
																Binding="{Binding Operation}"
																Value="{x:Null}">
																<Setter
																	Property="Text"
																	Value="op_default" />
															</DataTrigger>
														</Style.Triggers>
													</Style>
												</FrameworkElement.Style>
                                            </TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </control:ListViewX>
                    <Grid
						Name="CustomHotkey_Item"
						Column="1"
						Margin="10,0,10,0"
						Style="{StaticResource NullIsNotEnabled}"
						DataContext="{x:Null}">
                        <StackPanel
							IsEnabled="{Binding}">
                            <FrameworkElement.Resources>
                                <ResourceDictionary>
                                    <Style
										TargetType="{x:Type StackPanel}"
										x:Key="{x:Type StackPanel}">
                                        <Setter
											Property="Margin"
											Value="0,0,0,8" />
                                    </Style>
                                </ResourceDictionary>
                            </FrameworkElement.Resources>
                            <StackPanel>
                                <CheckBox
									IsChecked="{Binding Enable}"
									Content="Enable" />
                            </StackPanel>
                            <StackPanel>
                                <control:KControl
									K="{Binding Hotkey.TheK}" />
                            </StackPanel>
                            <StackPanel>
                                <control:OperationSingleControl
									Operation="{Binding Operation}" />
                            </StackPanel>
                        </StackPanel>
                    </Grid>
                </Grid>
            </TabItem>
            <TabItem
				Name="KeyMapping_TabItem"
				Header="key_mapping">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition
							Height="Auto"
							MinHeight="50"
							MaxHeight="100" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <Grid
						Row="0">
                        <ScrollViewer
							VerticalScrollBarVisibility="Hidden">
                            <TextBlock
								Text="Tip_KeyMapping" />
                        </ScrollViewer>
                    </Grid>
                    <control:ListViewX
						x:Name="KeyMapping_ListView"
						OnAddingItem="KeyMapping_ListView_OnAddingItem"
						OnRemovingItem="KeyMapping_ListView_OnRemovingItem"
						SelectionChanged="KeyMapping_ListView_SelectionChanged"
						Grid.Row="1"
						ItemsSource="{Binding Configur.KeyMapping}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn
									control:X.SortBy="Enable"
									Width="40"
									Header="Enable">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox
												IsChecked="{Binding Enable}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="Key"
									Width="300"
									Header="km_key">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <control:KControl
												Width="200"
												SingleModKey="True"
												Kwrapper="{Binding Key}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									control:X.SortBy="Value"
									Width="300"
									Header="km_value">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <control:KControl
												Width="200"
												SingleModKey="True"
												Kwrapper="{Binding Value}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </control:ListViewX>
                </Grid>
            </TabItem>
            <TabItem
				Name="BuildinFuncs_TabItem"
				Header="buildin_functions" HorizontalAlignment="Right" Width="64">
                <Grid>
                    <FrameworkElement.Resources>
                        <ResourceDictionary>
                            <Style
								TargetType="{x:Type FrameworkElement}"
								x:Key="C1">
                                <Setter
									Property="MinWidth"
									Value="120" />
                            </Style>
                            <Style
								TargetType="{x:Type FrameworkElement}"
								x:Key="C2">
                                <Setter
									Property="MinWidth"
									Value="200" />
                            </Style>
                            <Style
								TargetType="{x:Type StackPanel}"
								x:Key="StackParent">
                                <Setter
									Property="StackPanel.Orientation"
									Value="Vertical" />
                                <Setter
									Property="Margin"
									Value="1" />
                            </Style>
                            <Style
								TargetType="{x:Type StackPanel}"
								x:Key="{x:Type StackPanel}">
                                <Setter
									Property="StackPanel.Orientation"
									Value="Horizontal" />
                                <Setter
									Property="Margin"
									Value="0,0,0,8" />
                            </Style>
                            <Style
								TargetType="{x:Type GroupBox}"
								x:Key="{x:Type GroupBox}">
                                <Setter
									Property="Margin"
									Value="5,0,0,8" />
                                <Setter
									Property="Padding"
									Value="10,8,0,0" />
                            </Style>
                        </ResourceDictionary>
                    </FrameworkElement.Resources>
                    <ScrollViewer
						VerticalScrollBarVisibility="Auto">
                        <StackPanel
							Style="{DynamicResource StackParent}">
                            <GroupBox
								Header="buildin_onequick">
                                <StackPanel
									Style="{StaticResource StackParent}">
                                    <StackPanel>
                                        <TextBlock
											Style="{DynamicResource tip}"
											Text="buildin_onequick_tip" />
                                    </StackPanel>
                                    <StackPanel>
                                        <TextBlock
											Style="{DynamicResource C1}"
											Text="WindowToggleShowHide" />
                                        <control:KControl
											Style="{DynamicResource C2}"
											Kwrapper="{Binding Configur.Buildin.ShowHideWindow}" />
                                    </StackPanel>
                                    <StackPanel>
                                        <TextBlock
											Style="{DynamicResource C1}"
											Text="ServerToggleRunStop" />
                                        <control:KControl
											Style="{DynamicResource C2}"
											Kwrapper="{Binding Configur.Buildin.RunStopServer}" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox
								Header="buildin_window">
                                <StackPanel
									Style="{DynamicResource StackParent}">
                                    <StackPanel>
                                        <TextBlock
											Style="{DynamicResource C1}"
											Text="current_window_info"/>
                                        <control:KControl
											Style="{DynamicResource C2}"
											Kwrapper="{Binding Configur.Buildin.WindowInfo}" />
                                    </StackPanel>
                                    <StackPanel>
                                        <TextBlock
											Style="{DynamicResource C1}"
											Text="explorer_current_window_path" />
                                        <control:KControl
											Style="{DynamicResource C2}"
											Kwrapper="{Binding Configur.Buildin.ExplorerAppPath}" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                            <GroupBox
								Header="buildin_apps">
                                <StackPanel
									Style="{DynamicResource StackParent}">
                                    <StackPanel>
                                        <CheckBox
											Content="chrome_scroll_tab"
											IsChecked="{Binding Configur.Buildin.ChromeScrollTab}" />
                                    </StackPanel>
                                    <StackPanel>
                                        <CheckBox
											Content="ctrl_w_close_notepad"
											IsChecked="{Binding Configur.Buildin.CloseNotepad}" />
                                    </StackPanel>
                                </StackPanel>
                            </GroupBox>
                        </StackPanel>
                    </ScrollViewer>
                </Grid>
            </TabItem>
            <TabItem
				Name="Config_TabItem"
				Header="Config">
                <Grid
					Margin="4">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition
								Height="150" />
                        </Grid.RowDefinitions>
                        <TextBlock
							HorizontalAlignment="Right"
							VerticalAlignment="Top"
							Margin="0,-9,19,0"
							Foreground="#FFFF0000">[Beta]</TextBlock>
                        <GroupBox
							Grid.Row="0"
							Header="ConfigList">
                            <Grid
								Margin="4">
                                <control:ListViewX
									x:Name="Configs_ListView"
									OnAddingItem="Configs_ListView_OnAddingItem"
									OnRemovingItem="Configs_ListView_OnRemovingItem"
									ItemsSource="{Binding Preference.ConfigEntrys}">
                                    <ItemsControl.ItemContainerStyle>
                                        <Style
											TargetType="{x:Type ListBoxItem}">
                                            <Setter
												Property="HorizontalContentAlignment"
												Value="Stretch" />
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ListView.View>
                                        <GridView>
                                            <GridViewColumn
												control:X.SortBy="Name"
												Width="150"
												Header="ConfigName">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel
															Orientation="Horizontal">
                                                            <TextBox
																Width="130"
																Text="{Binding Name}"
																IsReadOnly="{Binding CanNotChange}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn
												control:X.SortBy="Hotkey"
												Width="260"
												Header="ConfigHotkey">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel
															Orientation="Horizontal">
                                                            <control:KControl
																Width="120"
																Margin="0"
																Kwrapper="{Binding HotkeyLoad}"
																ToolTip="ConfigLoadKind" />
                                                            <control:KControl
																Width="120"
																Margin="3,0,0,0"
																Kwrapper="{Binding HotkeyClear}"
																ToolTip="ConfigClearKind" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn
												Width="80"
												Header="ConfigOperation">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel
															Orientation="Horizontal">
                                                            <!--未知连接 ID：38-->
                                                            <Button
																Content="ConfigLoadKind" />
                                                            <!--未知连接 ID：39-->
                                                            <Button
																Content="ConfigClearKind" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn
												Width="120"
												Header="ConfigOverwriteFuncs">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <StackPanel
															Orientation="Horizontal">
                                                            <CheckBox
																ToolTip="screen_border"
																IsChecked="{Binding OverwriteScreenBorder}" />
                                                            <CheckBox
																ToolTip="copy_search"
																IsChecked="{Binding OverwriteQuickSearch}" />
                                                            <CheckBox
																ToolTip="phrase_replace"
																IsChecked="{Binding OverwriteReplacePhrase}" />
                                                            <CheckBox
																ToolTip="hotkey_remap"
																IsChecked="{Binding OverwriteCustomHotkey}" />
                                                            <CheckBox
																ToolTip="key_mapping"
																IsChecked="{Binding OverwriteKeyMapping}" />
                                                            <CheckBox
																ToolTip="buildin_functions"
																IsChecked="{Binding OverwriteBuildinFuncs}" />
                                                        </StackPanel>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                            <GridViewColumn
												control:X.SortBy="Path"
												Width="470"
												Header="ConfigPath">
                                                <GridViewColumn.CellTemplate>
                                                    <DataTemplate>
                                                        <Grid>
                                                            <TextBox
																Margin="0,0,64,0"
																Text="{Binding Path}"
																IsReadOnly="{Binding CanNotChange}" />
                                                            <!--未知连接 ID：40-->
                                                            <Button
																Content="..."
																HorizontalAlignment="Right"
																Width="22"
																Margin="0,0,32,0"
																IsEnabled="{Binding CanChange}" />
                                                            <!--未知连接 ID：41-->
                                                            <Button
																Content="✏"
																HorizontalAlignment="Right"
																Width="22"
																Margin="0,0,4,0"
																IsEnabled="{Binding CanChange}" />
                                                        </Grid>
                                                    </DataTemplate>
                                                </GridViewColumn.CellTemplate>
                                            </GridViewColumn>
                                        </GridView>
                                    </ListView.View>
                                </control:ListViewX>
                            </Grid>
                        </GroupBox>
                        <GroupBox
							Grid.Row="1"
							Margin="0,6"
							Header="ConfigCurrent">
                            <Grid
								Margin="4">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition
										Width="100" />
                                    <ColumnDefinition
										Width="auto"
										MinWidth="100" />
                                </Grid.ColumnDefinitions>
                                <StackPanel
									Grid.Column="0">
                                    <Grid>
                                        <TextBox
											IsReadOnly="True"
											Margin="0,0,64,0"
											Text="{Binding ConfigFilePath, Mode=OneWay}" />
                                        <Button
											Content="..."
											Width="20"
											HorizontalAlignment="Right"
											Margin="0,0,32,0"
											Click="ConfigFile_ChangePath" />
                                        <Button
											Content="✏"
											Width="20"
											HorizontalAlignment="Right"
											Margin="0,0,4,0"
											Click="ConfigFile_Open" />
                                    </Grid>
                                    <StackPanel
										Orientation="Horizontal"
										Margin="0,10,0,0">
                                        <Button
											MinWidth="200"
											Content="ConfigImportOverwriteAll"
											Click="ConfigFile_ImportFrom" />
                                        <Button
											MinWidth="200"
											Margin="20,0,0,0"
											Content="ConfigExport"
											Click="ConfigFile_ExportTo" />
                                    </StackPanel>
                                </StackPanel>
                                <StackPanel
									Grid.Column="2">
                                    <Button
										Content="ConfigResetDefaultPath"
										Click="ConfigFile_ResetPath" />
                                </StackPanel>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <StackPanel
						Width="100"
						VerticalAlignment="Bottom"
						HorizontalAlignment="Right"
						Margin="0,0,7,20">
                        <Button
							Foreground="#FFFF0000"
							Content="ConfigReset"
							Click="Config_ResetToDefault" />
                        <Button
							Foreground="#FFFF0000"
							Content="ConfigClear"
							Click="Config_Clear" />
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem
				Name="About_TabItem"
				Header="About">
                <ScrollViewer
					VerticalScrollBarVisibility="Auto">
                    <StackPanel
						Margin="14">
                        <WrapPanel
							Name="AboutInfo_WrapPanel">
                            <StackPanel
								Name="AboutInfo_LeftStackPanel"
								MinWidth="600"
								MaxWidth="{Binding ActualWidth, ElementName=AboutInfo_WrapPanel}">
                                <Canvas
									Height="60"
									Margin="0,0,0,0">
                                    <Image
										Source="assets\white_black_border_24.ico"
										Height="50" />
                                    <StackPanel
										Canvas.Left="60"
										Orientation="Horizontal">
                                        <TextBlock
											FontSize="22"
											Text="{Binding AppNameLocal}" />
                                        <TextBlock
											Margin="10,10,0,0"
											Text="{Binding DesktopOrStore}" />
                                        <TextBlock
											Margin="10,10,0,0"
											Text="{Binding ArchStr}" />
                                    </StackPanel>
                                </Canvas>
                                <Grid
									Height="12" />
                                <StackPanel>
                                    <FrameworkElement.Resources>
                                        <ResourceDictionary>
                                            <Style
												TargetType="{x:Type control:Link}"
												x:Key="{x:Type control:Link}">
                                                <Setter
													Property="FontSize"
													Value="13" />
                                                <Setter
													Property="Margin"
													Value="0,4,0,0" />
                                            </Style>
                                        </ResourceDictionary>
                                    </FrameworkElement.Resources>
                                    <WrapPanel
										Orientation="Horizontal">
                                        <control:Link
											UriMargin="5"
											PreText="HomePageShort"
											UriText="{Binding AppUrl_Show}"
											RunCommand="{Binding AppUrl}" />
                                        <control:Link
											UriMargin="5"
											Margin="10,4,0,0"
											UriText="{Binding Weibo_ShowText}"
											RunCommand="{Binding WeiboUrl}" />
                                    </WrapPanel>
                                    <WrapPanel
										Orientation="Horizontal"
										Margin="0,1,0,0"/>
                                </StackPanel>
                            </StackPanel>
                            <StackPanel
								MinWidth="150"
								Margin="0,10,0,0">
                                <TextBlock
									Text="{Binding AboutUsingInfo}" />
                                <TextBlock />
                                <CheckBox
									Name="AutorunCheckBox"
									IsEnabled="False"
									Content="Autorun"
									IsChecked="{Binding IsAutorun}" />
                            </StackPanel>
                            <StackPanel
								Name="AboutInfo_Right"
								MinWidth="150"
								Margin="0,10,0,0">
                                <StackPanel
									Orientation="Horizontal">
                                    <TextBlock
										Foreground="#FFFF0000"
										Text="InPromoTagText"
										Visibility="{Binding UpdateInfo.PromoTag, FallbackValue=Collapsed, Converter={StaticResource BoolToVisibility}}" />
                                </StackPanel>
                                <control:Link
									UriClick="CopyFeedbackInfo"
									UriText="CopyEnvInfo" />
                                <control:Link
									RunCommand="{x:Static local:G.LogFilePath}"
									UriText="LogFile" />
                                <control:Link
									RunCommand="{x:Static local:G.AppDataFolder}"
									UriText="AppdataFolder" />
                            </StackPanel>
                        </WrapPanel>
                    </StackPanel>
                </ScrollViewer>
            </TabItem>
            <TabItem
				Header="Entrys"
				IsVisibleChanged="TabItem_Entrys_IsVisibleChanged">
                <Grid>
                    <control:ListViewX
						x:Name="EntrysListView"
						ContextMenu="{x:Null}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn
									Header="Trigger"
									control:X.SortBy="TriggerString"
									Width="180">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									Header="Operation"
									control:X.SortBy="OperationString"
									Width="480">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Operation}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									Header="Condition"
									control:X.SortBy="ConditionString">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Condition}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn
									Header="Priority"
									control:X.SortBy="Priority">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock
												Text="{Binding Priority}" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </control:ListViewX>
                </Grid>
            </TabItem>
            <TabItem
				Name="EventsTabItem"
				Header="Log"
				Visibility="{Binding Debug_Visibility}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition
							Height="30" />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel
						VerticalAlignment="Center"
						Orientation="Horizontal">
                        <CheckBox
							Content="Listen"
							IsChecked="{Binding LogListenerEnable}" />
                        <Button
							Width="88"
							Content="Clear"
							Click="Button_Events_Clear_Click" />
                    </StackPanel>
                    <ScrollViewer
						Name="ScrollViewer_Log"
						Grid.Row="1">
                        <TextBox
							Name="EventsLogBox"
							IsReadOnly="True"
							FontFamily="Consolas" />
                    </ScrollViewer>
                </Grid>
            </TabItem>
        </TabControl>
    </Grid>
</Window>
